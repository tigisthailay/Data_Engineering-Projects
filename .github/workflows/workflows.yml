#GitHub Actions documentation
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
name: GitHub Actions

on:
  push:
    branches:
      - main
    #run when someone pushes a tag that starts with v1.
    tags:
      - v1.**


  issues:
    types: [opened]
  


jobs:
  pre-builds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Echo GitHub Actions
        run: echo "New issue has been oppened!"
  
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Echo Build
        run: sleep 10 && echo "Build lasted for 10 seconds"

  post-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Echo post Build
        run: echo "Build ended on:" 'date'

# on:
#   schedule:
#     - cron: '30 5 * * 1,3'
#     - cron: '30 5 * * 2,4'

# jobs:
#   test_schedule:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Not on Monday or Wednesday
#         if: github.event.schedule != '30 5 * * 1,3'
#         run: echo "This step will be skipped on Monday and Wednesday"
#       - name: Every time
#         run: echo "This step will always run"
########################################

#to run a job in your workflow based on the new commit state
#on:
#   status
# jobs:
#   if_error_or_failure:
#     runs-on: ubuntu-latest
#     if: >-
#       github.event.state == 'error' ||
#       github.event.state == 'failure'
#     steps:
#       - env:
#           DESCRIPTION: ${{ github.event.description }}
#         run: |
#           echo The status is error or failed: $DESCRIPTION

##########################################################

#
# on:
#   workflow_dispatch:
#     inputs:
#       logLevel:
#         description: 'Log level'
#         required: true
#         default: 'warning'
#         type: choice
#         options:
#         - info
#         - warning
#         - debug
#       tags:
#         description: 'Test scenario tags'
#         required: false
#         type: boolean
#       environment:
#         description: 'Environment to run tests against'
#         type: environment
#         required: true

# jobs:
#   log-the-inputs:
#     runs-on: ubuntu-latest
#     steps:
#       - run: |
#           echo "Log level: $LEVEL"
#           echo "Tags: $TAGS"
#           echo "Environment: $ENVIRONMENT"
#         env:
#           LEVEL: ${{ inputs.logLevel }}
#           TAGS: ${{ inputs.tags }}
#           ENVIRONMENT: ${{ inputs.environment }}